{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/blog.service.ts","webpack:///src/app/edit/edit.component.ts","webpack:///src/app/edit/edit.component.html","webpack:///src/app/list/list.component.ts","webpack:///src/app/list/list.component.html","webpack:///src/app/pagenotfound/pagenotfound.component.ts","webpack:///src/app/pagenotfound/pagenotfound.component.html","webpack:///src/app/preview/preview.component.ts","webpack:///src/app/preview/preview.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","useHash","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","BlogService","draft","eventEmit","username","reject","postList","fetch","res","json","data","i","length","post","Post","postid","modified","created","body","push","err","url","singlePost","encodeURIComponent","formBody","join","method","headers","providedIn","EditComponent","route","blogService","router","paramMap","subscribe","ngOnInit","getUsername","getUrlPostid","getPost","emit","urlpostid","snapshot","get","getCurrentDraft","setCurrentDraft","navigateByUrl","deletePost","refreshList","updatePost","console","log","jwt","parseJWT","document","cookie","replace","usr","token","base64Url","split","base64","JSON","parse","atob","ListComponent","getPostList","value","nextPostid","newPost","obj1","obj2","postid1","postid2","fetchPosts","sort","compare","PagenotfoundComponent","PreviewComponent","markdown","markdownProcess","reader","writer","parsed","render","copyMarkdown","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EditComponent } from './edit/edit.component';\nimport { PreviewComponent } from './preview/preview.component';\nimport { ListComponent } from './list/list.component';\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\n\n\n\nconst routes: Routes = [\n  \n  { path: 'edit/:id', component: EditComponent },\n  { path: 'preview/:id', component: PreviewComponent},\n  { path: '**', component: PagenotfoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-blog';\n}\n","<div>\n  <app-list></app-list>\n</div>\n<div>\n  <!-- <app-edit></app-edit> -->\n  <router-outlet></router-outlet>\n</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule }    from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { ListComponent } from './list/list.component';\nimport { EditComponent } from './edit/edit.component';\nimport { PreviewComponent } from './preview/preview.component';\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListComponent,\n    EditComponent,\n    PreviewComponent,\n    PagenotfoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable,EventEmitter, Output } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogService {\n  // posts: Post;\n  draft: Post;\n\n  public eventEmit: any;\n\n  constructor( ) { \n    this.draft = null;\n\n    this.eventEmit = new EventEmitter();\n    \n  }\n \n  \n  \n  fetchPosts(username: string): Promise<Post[]> {\n    return new Promise(function(resolve, reject) {\n        var postList = [];\n        fetch('/api/' + username)\n        .then((res) => res.json())\n        .then((data) => {\n          // console.log(data[0]);\n          // postList = data;\n          for(var i = 0; i < data.length; i++) {\n            var post: Post = new Post();\n            post.postid = data[i].postid;\n            post.modified = data[i].modified;\n            post.created = data[i].created;\n            post.title = data[i].title;\n            post.body = data[i].body;\n            // console.log(typeof(post));\n            postList.push(post);\n            if(postList.length == data.length) {\n              resolve(postList);\n            }\n          }})\n        .catch((err) => {\n          reject(new Error(\"404 USER NOT FOUND\"));\n        });\n  })\n}\n\ngetPost(username: string, postid: number): Promise<Post> {\n  return new Promise(function(resolve, reject) {\n    var url = '/api/' + username + '/' + postid;\n    // console.log(url);\n    fetch(url)\n    .then((res) => res.json())\n    .then((data) => {\n      // console.log(data);\n      var singlePost: Post = new Post();\n      singlePost.postid = data[0].postid;\n      singlePost.modified = data[0].modified;\n      singlePost.created = data[0].created;\n      singlePost.title = data[0].title;\n      singlePost.body = data[0].body;\n      // this.setCurrentDraft(singlePost);\n      \n      resolve(singlePost);\n      \n    })\n    .catch((err) => {\n      reject(new Error(\"404 POST NOT FOUND\"));\n    }) \n  });\n}\n\nnewPost(username: string, post: Post): Promise<void> {\n  return new Promise(function(resolve, reject) {\n    var url = '/api/' + username + '/' + post.postid;\n    var data = [];\n    \n    data.push(encodeURIComponent(\"title\") + \"=\" + encodeURIComponent(post.title));\n    data.push(encodeURIComponent(\"body\") + \"=\" + encodeURIComponent(post.body));   \n    \n    // console.log(post.title);\n    // console.log(post.body);\n    var formBody = data.join(\"&\");\n    // console.log(data);\n    fetch(url, {\n     method: 'POST',\n     headers: {\n       'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n     },\n     body: formBody\n    })\n    .then((res) => resolve())\n    .catch((err) => reject(new Error(\"SAVE FAILED\")));\n  });\n}\n\nupdatePost(username: string, post: Post): Promise<void> {\n  return new Promise(function(resolve, reject) {\n    var url = '/api/' + username + '/' + post.postid;\n    var data = [];\n    \n    data.push(encodeURIComponent(\"title\") + \"=\" + encodeURIComponent(post.title));\n    data.push(encodeURIComponent(\"body\") + \"=\" + encodeURIComponent(post.body));   \n\n    var formBody = data.join(\"&\");\n    // console.log(data);\n    fetch(url, {\n     method: 'PUT',\n     headers: {\n       'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n     },\n     body: formBody\n    })\n    .then((res) => resolve())\n    .catch((err) => reject(new Error(\"UPDATE FAILED\")));\n  });\n}\n\ndeletePost(username: string, postid: number): Promise<void> {\n  return new Promise(function(resolve, reject) {\n    var url = '/api/' + username + '/' + postid;\n    fetch(url, {\n     method: 'DELETE',\n     headers: {\n       'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n     }\n    })\n    .then((res) => resolve())\n    .catch((err) => reject(new Error(\"DELETE FAILED\")));\n  });\n}\n\n// @Output() change: EventEmitter = n/ew EventEmitter();\nsetCurrentDraft(post: Post): void {\n  this.draft = post;\n}\n\ngetCurrentDraft(): Post {\n  return this.draft;\n}\n\n\n\n}\n\n\nexport class Post {\n  postid: number;\n  created: Date;\n  modified: Date;\n  title: string;\n  body: string;\n}","import { Component, OnInit, Input, SimpleChange } from '@angular/core';\nimport { BlogService, Post } from '../blog.service'; \nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ThrowStmt } from '@angular/compiler';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute,\n    private blogService: BlogService,\n    private router: Router\n    ) {\n      this.route.paramMap.subscribe(() => {\n        this.ngOnInit();\n      });\n     }\n  @Input() post: Post;\n  username: string;\n  urlpostid: number;\n\n\n  ngOnInit(): void {\n    this.getUsername();\n    this.getUrlPostid();\n    this.getPost();\n    // this.refreshList();    \n  }\n\n  refreshList(): void {\n    this.blogService.eventEmit.emit(\"fresh\");\n  }\n\n  getUrlPostid(): void{\n    this.urlpostid = +this.route.snapshot.paramMap.get('id');\n  }\n  //FOR TEST PURPOSE\n  // getSinglePost(): void {\n    \n  //   console.log(\"getSingle\");\n  //   console.log(this.post);\n  // }\n  //for test purpost\n  getPost(): void {\n    this.post = this.blogService.getCurrentDraft();\n    // console.log(this.post);\n    if(this.post == null || this.post.postid != this.urlpostid) {\n      this.blogService.getPost(this.username, this.urlpostid)\n      .then((res) => {\n        this.blogService.setCurrentDraft(res);\n        this.post = this.blogService.getCurrentDraft();\n        // console.log(this.blogService.getCurrentDraft());\n      }).catch((err) => this.router.navigateByUrl(\"error\"));\n    }\n  }\n\n  deletePost(): void {\n    this.blogService.deletePost(this.username, this.post.postid);\n    this.post = null;\n    this.refreshList();\n  }\n\n  savePost(): void {\n    this.blogService.updatePost(this.username, this.post);\n    this.blogService.getPost(this.username, this.urlpostid)\n      .then((res) => {\n        this.blogService.setCurrentDraft(res);\n        this.post = this.blogService.getCurrentDraft();\n        this.refreshList();\n      }).catch((err) => console.log(\"POST NOT FOUND\"));\n  }\n\n  getUsername(): void {\n    let jwt = this.parseJWT(document.cookie.replace(/(?:(?:^|.*;\\s*)jwt\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\"));\n    this.username = jwt.usr;\n    // this.username = \"1\";\n    \n  }\n\n  previewPost(): void {\n    this.blogService.setCurrentDraft(this.post);\n  }\n\n  parseJWT(token: string) {\n    let base64Url = token.split('.')[1];\n    let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    return JSON.parse(atob(base64));\n  }\n\n\n}\n","<div *ngIf=\"post\">\n    <div >\n        Title:\n    </div>\n    <div>\n        <input id=\"title\" name=\"title\" \n            placeholder=\"title\" [(ngModel)]=\"post.title\">\n    </div>\n    <div>\n        Body:\n    </div>\n    <div>\n        <textarea id=\"body\" type=\"text\" [(ngModel)]=\"post.body\"></textarea>\n    </div>\n    \n    <div>\n        Last Modified: {{ post.modified | date: 'short'}}\n    </div>\n    <div id=\"buttons\">\n        <button (click)=\"deletePost()\" [routerLink]=\"['/']\">delete</button>\n        <button (click)=\"savePost()\">save</button>\n        <button [routerLink]=\"['/preview/' + post.postid]\" (click)=\"previewPost()\">preview</button>\n    </div>\n</div>\n\n    \n","import { Component, OnInit } from '@angular/core';\nimport { BlogService, Post } from '../blog.service'; \nimport { ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute,\n    private blogService: BlogService\n    ) { \n      this.route.paramMap.subscribe(() => {\n        this.ngOnInit();\n      });\n    }\n  draft: Post;\n  username: string;\n  postList: Post[];\n  modifiedList: string[];\n  nextPostid: number;\n  // curUrlPostid: number;\n  // singlePost: Post;\n  // postid: any;\n  ngOnInit(): void {\n    this.getUsername();\n    // this.getUrlPostid();\n    this.getPostList();\n    // this.getDraft();\n    this.blogService.eventEmit.subscribe((value: any) => {\n      if(value == \"fresh\") {\n        this.getPostList();\n      }\n    })\n    \n  }\n\n  // getDraft(): void {\n  //   this.draft = new Post();\n  //   var postid = +this.route.snapshot.paramMap.get('id');\n  //   if(postid > 0) {\n  //     this.draft = this.blogService.getCurrentDraft();\n  //   } else {\n  //     this.draft.postid = 0;\n  //   }\n  // }\n\n  // getUrlPostid(): void {\n   \n  //   this.curUrlPostid =  +this.route.snapshot.paramMap.get('id');\n  // }\n  //TEST BLOCK\n  // draftTest(): void {\n  //   var singlePost: Post = new Post();\n  //   singlePost.postid = 1;\n    \n  //   // singlePost.created = data[0].created;\n  //   singlePost.title = \"TEST DRAFT\";\n  //   singlePost.body = \"TEST DRAFT\";\n  //   // this.blogService.setCurrentDraft(singlePost);\n  //   console.log(this.blogService.getCurrentDraft());\n  // }\n\n  // deletePost(): void {\n  //   this.blogService.deletePost(this.username, 1);\n  // }\n\n  // updatePost(): void {\n  //   var post: Post = new Post();\n  //   post.postid = 1;\n  //   post.body = \"testPUTAng2\";\n  //   post.title = \"testPUTAng2\";\n  //   // console.log(JSON.stringify(post))\n  //   this.blogService.updatePost(this.username, post);\n  // }\n\n  newPost(): void {\n    this.draft = new Post();\n    this.draft.postid = this.nextPostid;\n    this.nextPostid = this.nextPostid + 1;\n    this.draft.body = \"\";\n    this.draft.title = \"\";\n    // console.log(JSON.stringify(post))\n    this.blogService.newPost(this.username, this.draft);\n    this.blogService.setCurrentDraft(this.draft);\n    this.ngOnInit();\n  }\n\n  // getSinglePost(): void {\n  //   this.blogService.getPost(this.username, 1)\n  //   .then((res) => this.singlePost = res);\n  // }\n\n  compare() {\n    return function(obj1, obj2) {\n      var postid1 = obj1.postid;\n      var postid2 = obj2.postid;\n      if(postid1 < postid2) {\n        return -1;\n      } else if (postid1 > postid2) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n  }\n  \n  setDraft(post: Post): void {\n    this.blogService.setCurrentDraft(post);\n    // console.log(this.blogService.getCurrentDraft());\n  }\n\n  getPostList(): void {\n    // this.getUrlPostid();\n    // console.log(\"Current URL postid = \" + this.curUrlPostid);\n    this.blogService.fetchPosts(this.username)\n    .then((res) => {\n      res.sort(this.compare());\n      this.nextPostid = res[res.length - 1].postid + 1;\n      this.postList = res;\n\n    });\n  }\n  \n  getUsername(): void {\n    let jwt = this.parseJWT(document.cookie.replace(/(?:(?:^|.*;\\s*)jwt\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\"));\n    this.username = jwt.usr;\n    // this.username = \"1\";\n    \n  }\n\n  parseJWT(token: string) {\n    let base64Url = token.split('.')[1];\n    let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    return JSON.parse(atob(base64));\n  }\n\n}\n","<button (click)=\"newPost()\" [routerLink]=\"['/edit/'+ nextPostid ]\">New Post</button>\n<ul>\n    <li *ngFor=\"let post of postList\">\n\n        <a [routerLink]=\"['/edit/'+post.postid]\" (click)=\"setDraft(post)\">\n     \n                {{ post.created | date: 'short' }} &nbsp;\n                {{ post.title }}\n       \n            \n        </a>\n        \n    </li>\n</ul>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pagenotfound',\n  templateUrl: './pagenotfound.component.html',\n  styleUrls: ['./pagenotfound.component.css']\n})\nexport class PagenotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>Sorry this page does not exist</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Parser, HtmlRenderer } from 'commonmark';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BlogService, Post } from '../blog.service'; \n\n@Component({\n  selector: 'app-preview',\n  templateUrl: './preview.component.html',\n  styleUrls: ['./preview.component.css']\n})\nexport class PreviewComponent implements OnInit {\n  post: Post;\n  markdown: Post;\n  urlpostid: number;\n  username: string;\n\n  constructor( private route: ActivatedRoute,\n              private blogService: BlogService,\n              private router: Router\n              ) {\n    this.route.paramMap.subscribe(() => {\n      this.markdown = new Post();\n      this.getUsername();\n      this.getUrlPostid();\n      this.getPost();\n      this.markdownProcess();\n    });\n   }\n\n  ngOnInit(): void {\n    this.getUsername();\n    this.getUrlPostid();\n    this.getPost();\n    this.markdownProcess();\n  }\n\n  markdownProcess(): void {\n    var reader = new Parser();\n    var writer = new HtmlRenderer();\n    // console.log(this.markdown);\n    var parsed = reader.parse(this.markdown.body)\n    this.markdown.body = writer.render(parsed);\n    parsed = reader.parse(this.markdown.title)\n    this.markdown.title = writer.render(parsed);\n  }\n\n  getUrlPostid(): void{\n    this.urlpostid = +this.route.snapshot.paramMap.get('id');\n  }\n\n  getUsername(): void {\n    let jwt = this.parseJWT(document.cookie.replace(/(?:(?:^|.*;\\s*)jwt\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\"));\n    this.username = jwt.usr;\n    // this.username = \"1\";\n    \n  }\n\n  parseJWT(token: string) {\n    let base64Url = token.split('.')[1];\n    let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    return JSON.parse(atob(base64));\n  }\n\n  getPost(): void {\n    this.post = this.blogService.getCurrentDraft();\n    // if(this.post == null || this.post.postid != this.urlpostid) {\n    //   this.blogService.getPost(this.username, this.urlpostid)\n    //   .then((res) => {   \n    //     this.copyMarkdown(res);\n    //     this.markdownProcess();\n    //   }).catch((err) => console.log(\"POST NOT FOUND\"));\n    // } else {\\\n    if (this.post == null || this.post.postid != this.urlpostid) {\n      console.log(\"goto error\");\n      this.router.navigateByUrl('/error');\n    }\n    this.copyMarkdown(this.post);\n    this.markdownProcess();\n    // }   \n  }\n\n  copyMarkdown(post): void {\n    this.markdown.body = post.body;\n    this.markdown.title = post.title;\n    this.markdown.postid = post.postid;\n  }\n\n\n}\n","<a [routerLink]=\"['/edit/' + markdown.postid]\">Edit</a>\n<div [innerHTML]=\"markdown.title\"></div>\n<div [innerHTML]=\"markdown.body\"></div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}